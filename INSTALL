# How to build from source

## Requirements

### Common requirements

In order to build tpfand, you need to install several components:

- A C compiler (galarm was tested with GCC 4)
- [CMake](http://www.cmake.org) >= 2.4.6.
- [GLIB2](http://www.gtk.org) >= 2.14

## Building
First, you need to configure the compilation, using CMake. Go inside the
`build` dir. Create it if it doesn't exist.

GNU/Linux and MacOS X:

    cmake -DCMAKE_BUILD_TYPE=Release ..
    make

### CMake standard options
Here is a list of the most interesting options provided out of the box by CMake.

- CMAKE_BUILD_TYPE: The type of build (can be Debug Release MinSizeRel RelWithDebInfo)
- CMAKE_INSTALL_PREFIX: The prefix to use when running make install (Default to
  /usr/local on GNU/Linux and MacOS X)
- CMAKE_C_COMPILER: The path to the C compiler
- CMAKE_CXX_COMPILER: The path to the C++ compiler

### Browsing/editing CMake options

In addition to passing options on the command line, you can browse and edit
CMake options using `cmakesetup` (Windows) or `ccmake` (GNU/Linux and MacOS X).

- Go to the build dir
- On Windows: run `cmakesetup`
- On GNU/Linux and MacOS X: run `ccmake ..`

## Installing

If you want to install galarm after compilation run:

    make install

The binary is installed as `tpfand`.
The path to this binary is usually /usr/bin/tpfand or /usr/local/bin/tpfand
depending on your install prefix.

## Running

The tpfand binary can be found in the `build/src` directory.

## About this document

This document is written using [Markdown][] syntax, making it possible to
provide usable information in both plain text and HTML format. Whenever
modifying this document please use [Markdown][] syntax.

[markdown]: http://www.daringfireball.net/projects/markdown

